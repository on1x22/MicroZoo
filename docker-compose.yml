version: '3.4'

services:   
  gateway:
    image: gateway
    container_name: gateway
    hostname: gateway
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    ports:
    - 6000:80
    - 6001:443
    networks:
    - microzoo_net

  zookeepersapi:
    image: zookeepersapi
    container_name: zookeepersapi
    build:
      context: .
      dockerfile: ZookeepersApi/Dockerfile
    ports:
    - 7000:80
    - 7001:443
    networks:
    - microzoo_net
    environment:
      PERSONS_API: "http://personsapi"
      ANIMALS_API: "http://animalsapi"
  
  managersapi:
    image: managersapi
    container_name: managersapi
    build:
      context: .
      dockerfile: ManagersApi/Dockerfile
    ports:
    - 7005:80
    - 7006:433
    networks:
    - microzoo_net
    environment:
      ZOOKEEPERS_API: "http://zookeepersapi"
      PERSONS_API: "http://personsapi"
      ANIMALS_API: "http://animalsapi"

  personsapi:
    image: personsapi
    container_name: personsapi
    build:
      context: .
      dockerfile: PersonApi/Dockerfile
    ports:
    - 7010:80
    networks:
    - microzoo_net

  animalsapi:
    image: animalsapi
    container_name: animalsapi
    build:
      context: .
      dockerfile: AnimalsApi/Dockerfile
    ports:
    - 7020:80
    networks:
    - microzoo_net
    depends_on:
    - rabbitmq

  identityapi:
    image: identityapi
    container_name: identityapi
    hostname: identityapi
    build:
      context: .
      dockerfile: IdentityApi/Dockerfile
    ports:
    - 7030:80
    - 7031:443
    networks:
    - microzoo_net
    depends_on:
    - rabbitmq
    - kibana

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    volumes:
    -  d:/data/rabbitmq/microzoo:/var/lib/rabbitmq
    ports:
    - "5672:5672"
    - 15672:15672
    expose:
    - "15672"
    - "5672"
    networks: 
    - microzoo_net

  elasticsearch:
    image: docker.io/library/elasticsearch:7.16.1
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVAOPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - d:/data/elasticsearch/microzoo:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - microzoo_net

  kibana:
    image: docker.io/library/kibana:7.16.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on: 
      - elasticsearch
    networks:
      - microzoo_net


networks:
  microzoo_net:
    name: microzoo_net
    driver: bridge
  