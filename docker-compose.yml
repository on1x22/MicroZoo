version: '3.4'

services:   
  gateway:
    image: gateway
    container_name: gateway
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    ports:
    - 6000:80
    - 6001:443
    networks:
    - microzoo_net

  zookeepersapi:
    image: zookeepersapi
    container_name: zookeepersapi
    build:
      context: .
      dockerfile: ZookeepersApi/Dockerfile
    ports:
    - 7000:80
    - 7001:443
    networks:
    - microzoo_net
    environment:
      PERSONS_API: "http://personsapi"
      ANIMALS_API: "http://animalsapi"
  
  managersapi:
    image: managersapi
    container_name: managersapi
    build:
      context: .
      dockerfile: ManagersApi/Dockerfile
    ports:
    - 7005:80
    - 7006:433
    networks:
    - microzoo_net
    environment:
      ZOOKEEPERS_API: "http://zookeepersapi"
      PERSONS_API: "http://personsapi"
      ANIMALS_API: "http://animalsapi"

  personsapi:
    image: personsapi
    container_name: personsapi
    build:
      context: .
      dockerfile: PersonApi/Dockerfile
    ports:
    - 7010:80
    networks:
    - microzoo_net

  animalsapi:
    image: animalsapi
    container_name: animalsapi
    build:
      context: .
      dockerfile: AnimalsApi/Dockerfile
    ports:
    - 7020:80
    networks:
    - microzoo_net
    depends_on:
    - rabbitmq

  identityapi:
    image: identityapi
    container_name: identityapi
    build:
      context: .
      dockerfile: IdentityApi/Dockerfile
    ports:
    - 7030:80
    - 7031:443
    networks:
    - microzoo_net
    depends_on:
    - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    volumes:
    -  d:/data/rabbitmq/microzoo:/var/lib/rabbitmq
    ports:
    - "5672:5672"
    - 15672:15672
    expose:
    - "15672"
    - "5672"
    networks: 
    - microzoo_net



networks:
  microzoo_net:
    name: microzoo_net
    driver: bridge
  